options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # 0) Get GKE credentials and persist kubeconfig for later steps
  - id: get-credentials
    name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      - -ceu
      - |
        gcloud container clusters get-credentials vikunja-autopilot \
          --region europe-west4 \
          --project vikunja-case
        # persist kubeconfig for next steps
        mkdir -p /workspace/.kube
        cp -f /builder/home/.kube/config /workspace/.kube/config

  # 1) Create/label/annotate namespace so Helm can manage it
  - id: prepare-namespace
    name: gcr.io/cloud-builders/gcloud
    env:
      - KUBECONFIG=/workspace/.kube/config
    entrypoint: bash
    args:
      - -ceu
      - |
        kubectl get ns vikunja >/dev/null 2>&1 || kubectl create ns vikunja
        kubectl label ns vikunja app.kubernetes.io/managed-by=Helm --overwrite
        kubectl annotate ns vikunja \
          meta.helm.sh/release-name=vikunja \
          meta.helm.sh/release-namespace=vikunja --overwrite

  # 2) Create/Update secrets
  - id: create-secrets
    name: gcr.io/cloud-builders/gcloud
    env:
      - KUBECONFIG=/workspace/.kube/config
    entrypoint: bash
    args:
      - -ceu
      - |
        # DB password – key must be POSTGRES_PASSWORD to match values.yaml
        kubectl -n vikunja create secret generic vikunja-db-secret \
          --from-literal=POSTGRES_PASSWORD="$(gcloud secrets versions access latest --secret=vikunja-db-password)" \
          --dry-run=client -o yaml | kubectl apply -f -

        # App JWT secret – create once if missing
        if ! kubectl -n vikunja get secret vikunja-app-secret >/dev/null 2>&1; then
          kubectl -n vikunja create secret generic vikunja-app-secret \
            --from-literal=VIKUNJA_SERVICE_JWTSECRET="$(tr -dc A-Za-z0-9 </dev/urandom | head -c 48)"
        fi

  # 3) Download Helm (no registry pulls) and deploy the local chart at ./helm/vikunja
 # 3) Download Helm and deploy the chart
- id: helm-deploy
  name: gcr.io/cloud-builders/gcloud
  workingDir: /workspace
  env:
    - KUBECONFIG=/workspace/.kube/config
  entrypoint: bash
  args:
    - -ceu
    - |
      set -euo pipefail

      # ---- install helm binary in /workspace/bin (not /workspace/helm) ----
      rm -rf /workspace/bin /workspace/linux-amd64 /workspace/helm.tgz
      mkdir -p /workspace/bin
      curl -fsSL "https://get.helm.sh/helm-v3.14.4-linux-amd64.tar.gz" -o /workspace/helm.tgz
      tar -xzf /workspace/helm.tgz -C /workspace
      mv /workspace/linux-amd64/helm /workspace/bin/helm
      chmod +x /workspace/bin/helm
      /workspace/bin/helm version

      # ---- use absolute chart path and print what Cloud Build can see ----
      CHART_DIR="/workspace/helm/vikunja"

      echo "pwd: $(pwd)"
      echo "Top-level repo content:"; ls -la /workspace
      echo "helm dir content:";      ls -la /workspace/helm || true
      echo "chart dir content:";     ls -la "${CHART_DIR}" || true

      if [ ! -f "${CHART_DIR}/Chart.yaml" ]; then
        echo "ERROR: Chart not found at ${CHART_DIR}"
        exit 1
      fi

      # ---- deploy ----
      /workspace/bin/helm upgrade --install vikunja "${CHART_DIR}" \
        --namespace vikunja --create-namespace \
        --set-string db.password="$(gcloud secrets versions access latest --secret=vikunja-db-password)" \
        --wait --timeout 15m
