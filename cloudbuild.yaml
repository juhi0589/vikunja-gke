# cloudbuild.yaml

options:
  # Satisfies the logging requirement even when a user-managed SA is used
  logging: CLOUD_LOGGING_ONLY
  default_logs_bucket_behavior: REGIONAL_USER_OWNED_BUCKET

timeout: "3600s"

steps:
# ---- 1) Terraform apply & capture outputs for later steps ----
- id: "terraform apply + outputs"
  name: "hashicorp/terraform:1.9.6"
  entrypoint: /bin/sh
  args:
    - -c
    - |
      set -eux
      terraform init -input=false
      terraform apply -input=false -auto-approve

      # Persist values we need in later steps
      {
        echo "PROJECT_ID=$(terraform output -raw project_id)"
        echo "REGION=$(terraform output -raw region)"
        echo "CLUSTER_NAME=$(terraform output -raw gke_autopilot_name)"
        echo "INSTANCE_CONN_NAME=$(terraform output -raw instance_connection_name)"
      } > /workspace/env.out

      echo "---- env.out ----"
      cat /workspace/env.out

# ---- 2) Connect to GKE and deploy with Helm ----
- id: "kubectl + helm deploy"
  name: "gcr.io/cloud-builders/gcloud"
  entrypoint: /bin/bash
  args:
    - -ceu
    - |
      set -euo pipefail
      source /workspace/env.out

      echo "Using cluster: $CLUSTER_NAME in region $REGION (project $PROJECT_ID)"
      gcloud container clusters get-credentials "$CLUSTER_NAME" --region "$REGION" --project "$PROJECT_ID"

      # If helm isn't present in this builder, uncomment the lines below to install it:
      # HELM_VER="v3.14.4"
      # curl -sSL "https://get.helm.sh/helm-${HELM_VER}-linux-amd64.tar.gz" | tar -xz
      # mv linux-amd64/helm /usr/local/bin/helm

      helm version

      # Secrets (idempotent)
      DB_PASS="$(gcloud secrets versions access latest --secret=vikunja-db-password --project "$PROJECT_ID")"

      kubectl create namespace vikunja --dry-run=client -o yaml | kubectl apply -f -

      kubectl -n vikunja create secret generic vikunja-db-secret \
        --from-literal=VIKUNJA_DB_HOST="$INSTANCE_CONN_NAME" \
        --from-literal=VIKUNJA_DB_NAME="vikunja" \
        --from-literal=VIKUNJA_DB_USER="vikunja" \
        --from-literal=VIKUNJA_DB_PASSWORD="$DB_PASS" \
        --dry-run=client -o yaml | kubectl apply -f -

      JWT_SECRET="$(head -c 32 /dev/urandom | xxd -p)"
      kubectl -n vikunja create secret generic vikunja-app-secret \
        --from-literal=VIKUNJA_JWT_SECRET="$JWT_SECRET" \
        --dry-run=client -o yaml | kubectl apply -f -

      # Path to your chart in the repo:
      CHART_PATH="./helm/vikunja"

      # Install/upgrade and let Helm own the namespace (prevents ownership label errors)
      helm upgrade --install vikunja "$CHART_PATH" \
        --namespace vikunja \
        --create-namespace \
        --wait
