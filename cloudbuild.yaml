timeout: "3600s"
options:
  logging: CLOUD_LOGGING_ONLY

steps:
# 0) Prepare environment + verify the tfstate bucket exists (no creation here)
- id: prepare-env
  name: gcr.io/cloud-builders/gcloud
  entrypoint: bash
  args:
    - -c
    - |
      set -euo pipefail
      PROJECT_ID="$$(gcloud config get-value project)"
      REGION="europe-west4"
      CLUSTER_NAME="vikunja-autopilot"
      TFSTATE_BUCKET="$$PROJECT_ID-tfstate"
      TFSTATE_PREFIX="gke"

      echo "Checking bucket: gs://$$TFSTATE_BUCKET"
      if ! gcloud storage buckets describe "gs://$$TFSTATE_BUCKET" >/dev/null 2>&1; then
        echo "ERROR: Bucket gs://$$TFSTATE_BUCKET not found. Create it once and re-run." >&2
        exit 1
      fi

      # write env for later steps (Cloud Build rewrites $$ â†’ $ at runtime)
      printf 'export PROJECT_ID=%s\nexport REGION=%s\nexport CLUSTER_NAME=%s\nexport TFSTATE_BUCKET=%s\nexport TFSTATE_PREFIX=%s\n' \
        "$$PROJECT_ID" "$$REGION" "$$CLUSTER_NAME" "$$TFSTATE_BUCKET" "$$TFSTATE_PREFIX" > /workspace/env.sh
      chmod +x /workspace/env.sh

# 1) Terraform init/apply (Terraform image only has /bin/sh)
- id: terraform-apply
  name: hashicorp/terraform:1.9.6
  entrypoint: sh
  dir: infra/terraform
  args:
    - -c
    - |
      set -e
      . /workspace/env.sh

      terraform init -input=false \
        -backend-config="bucket=$$TFSTATE_BUCKET" \
        -backend-config="prefix=$$TFSTATE_PREFIX"

      terraform apply -auto-approve -input=false

# 2) Get cluster creds + Helm deploy (fixes namespace ownership if it already exists)
- id: helm-deploy
  name: gcr.io/cloud-builders/gcloud
  entrypoint: bash
  args:
    - -c
    - |
      set -euo pipefail
      . /workspace/env.sh

      gcloud container clusters get-credentials "$$CLUSTER_NAME" --region "$$REGION"

      # If namespace is pre-existing, mark it as Helm-managed to avoid ownership error
      if kubectl get ns vikunja >/dev/null 2>&1; then
        kubectl label ns vikunja app.kubernetes.io/managed-by=Helm --overwrite
        kubectl annotate ns vikunja meta.helm.sh/release-name=vikunja meta.helm.sh/release-namespace=vikunja --overwrite
      fi

      helm repo add vikunja https://vikunja.github.io/vikunja
      helm repo update
      helm upgrade --install vikunja vikunja/vikunja --namespace vikunja --create-namespace
