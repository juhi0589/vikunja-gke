options:
  logging: CLOUD_LOGGING_ONLY

steps:
- id: get-credentials
  name: gcr.io/cloud-builders/gcloud
  entrypoint: bash
  args:
  - -ceu
  - |
    gcloud container clusters get-credentials vikunja-autopilot \
      --region europe-west4 \
      --project vikunja-case

    # persist kubeconfig for next steps
    mkdir -p /workspace/.kube
    cp -f /builder/home/.kube/config /workspace/.kube/config

- id: prepare-namespace
  name: gcr.io/cloud-builders/gcloud
  env:
  - KUBECONFIG=/workspace/.kube/config
  entrypoint: bash
  args:
  - -ceu
  - |
    kubectl get ns vikunja >/dev/null 2>&1 || kubectl create ns vikunja
    kubectl label ns vikunja app.kubernetes.io/managed-by=Helm --overwrite
    kubectl annotate ns vikunja meta.helm.sh/release-name=vikunja meta.helm.sh/release-namespace=vikunja --overwrite

- id: create-secrets
  name: gcr.io/cloud-builders/gcloud
  env:
  - KUBECONFIG=/workspace/.kube/config
  entrypoint: bash
  args:
  - -ceu
  - |
    kubectl -n vikunja create secret generic vikunja-db-secret \
      --from-literal=POSTGRES_PASSWORD="$(gcloud secrets versions access latest --secret=vikunja-db-password)" \
      --dry-run=client -o yaml | kubectl apply -f -

- id: helm-deploy
  name: gcr.io/cloud-builders/gcloud
  workingDir: /workspace
  env:
  - KUBECONFIG=/workspace/.kube/config
  entrypoint: bash
  args:
  - -ceu
  - |
    set -euo pipefail

    # Install helm into /workspace/bin (avoid naming collisions)
    rm -rf /workspace/bin /workspace/linux-amd64 /workspace/helm.tgz
    mkdir -p /workspace/bin
    curl -fsSL "https://get.helm.sh/helm-v3.14.4-linux-amd64.tar.gz" -o /workspace/helm.tgz
    tar -xzf /workspace/helm.tgz -C /workspace
    mv /workspace/linux-amd64/helm /workspace/bin/helm
    chmod +x /workspace/bin/helm
    /workspace/bin/helm version

    # Absolute chart path + quick listing for debugging
    CHART_DIR="/workspace/helm/vikunja"

    echo "pwd: $(pwd)"
    echo "Top-level:"; ls -la /workspace
    echo "helm dir:";  ls -la /workspace/helm || true
    echo "chart dir:"; ls -la "${CHART_DIR}" || true

    if [ ! -f "${CHART_DIR}/Chart.yaml" ]; then
      echo "ERROR: Chart not found at ${CHART_DIR}"
      exit 1
    fi

    /workspace/bin/helm upgrade --install vikunja "${CHART_DIR}" \
      --namespace vikunja --create-namespace \
      --wait --timeout 15m
