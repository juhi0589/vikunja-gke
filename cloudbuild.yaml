options:
  logging: CLOUD_LOGGING_ONLY

timeout: "1200s"

steps:
# 1) Get GKE credentials into a kubeconfig under /workspace so later steps can use it
- id: "get-credentials"
  name: gcr.io/cloud-builders/gcloud
  entrypoint: /bin/sh
  args:
    - -c
    - |
      set -eu
      CLUSTER_NAME="vikunja-autopilot"     # <-- change if different
      REGION="europe-west4"                # <-- change if different
      export KUBECONFIG=/workspace/kubeconfig
      gcloud container clusters get-credentials "$$CLUSTER_NAME" --region "$$REGION"

# 2) Ensure namespace exists and is Helm-adoptable (fixes Helm ownership error)
- id: "prepare-namespace"
  name: gcr.io/cloud-builders/gcloud
  entrypoint: /bin/sh
  args:
    - -c
    - |
      set -eu
      export KUBECONFIG=/workspace/kubeconfig
      NS="vikunja"
      kubectl get ns "$$NS" >/dev/null 2>&1 || kubectl create namespace "$$NS"
      kubectl label namespace "$$NS" app.kubernetes.io/managed-by=Helm --overwrite
      kubectl annotate namespace "$$NS" meta.helm.sh/release-name=vikunja meta.helm.sh/release-namespace="$$NS" --overwrite

# 3) Create/update DB password secret from Secret Manager
- id: "create-secrets"
  name: gcr.io/cloud-builders/gcloud
  entrypoint: /bin/sh
  args:
    - -c
    - |
      set -eu
      export KUBECONFIG=/workspace/kubeconfig
      NS="vikunja"
      DBPASS="$(gcloud secrets versions access latest --secret=vikunja-db-password)"
      kubectl -n "$$NS" create secret generic vikunja-db-secret \
        --from-literal=POSTGRES_PASSWORD="$${DBPASS}" \
        --dry-run=client -o yaml | kubectl apply -f -

# 4) Install Helm in the gcloud image (so GKE auth works) and deploy
- id: "helm-deploy"
  name: gcr.io/cloud-builders/gcloud
  entrypoint: /bin/sh
  args:
    - -c
    - |
      set -eu
      export KUBECONFIG=/workspace/kubeconfig
      HELM_VERSION=3.14.4
      curl -sSL -o /tmp/helm.tar.gz https://get.helm.sh/helm-v$${HELM_VERSION}-linux-amd64.tar.gz
      tar -C /tmp -xzf /tmp/helm.tar.gz
      install -m 0755 /tmp/linux-amd64/helm /usr/local/bin/helm
      helm version

      # Adjust path if your chart is not in ./helm
      test -f ./helm/Chart.yaml || { echo "Chart not found at ./helm"; exit 1; }

      helm upgrade --install vikunja ./helm \
        --namespace vikunja \
        --wait --timeout 10m
