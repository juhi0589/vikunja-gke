timeout: "1200s"
options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Prep: set env and verify the tfstate bucket exists (no creation)
  - id: prepare-env
    name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail

        PROJECT_ID="$(gcloud config get-value project)"
        REGION="europe-west4"
        CLUSTER_NAME="vikunja-autopilot"
        TFSTATE_BUCKET="${PROJECT_ID}-tfstate"
        TFSTATE_PREFIX="gke"

        echo "Checking bucket: gs://${TFSTATE_BUCKET}"
        gcloud storage buckets describe "gs://${TFSTATE_BUCKET}" >/dev/null

        cat > /workspace/env.sh <<EOF
export PROJECT_ID=${PROJECT_ID}
export REGION=${REGION}
export CLUSTER_NAME=${CLUSTER_NAME}
export TFSTATE_BUCKET=${TFSTATE_BUCKET}
export TFSTATE_PREFIX=${TFSTATE_PREFIX}
EOF
        chmod +x /workspace/env.sh
        echo "Wrote /workspace/env.sh"

  # Terraform: init + apply using the existing bucket
  - id: terraform apply
    name: hashicorp/terraform:1.9.6
    entrypoint: sh
    args:
      - -c
      - |
        set -euo pipefail
        . /workspace/env.sh

        terraform -chdir=infra/terraform init \
          -input=false \
          -backend-config="bucket=${TFSTATE_BUCKET}" \
          -backend-config="prefix=${TFSTATE_PREFIX}"

        terraform -chdir=infra/terraform apply -auto-approve -input=false \
          -var="project_id=${PROJECT_ID}" \
          -var="region=${REGION}"

  # Deploy: get kube creds, prep namespace for Helm adoption, create secrets, helm upgrade
  - id: kubectl + helm deploy
    name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        . /workspace/env.sh

        echo "Getting cluster credentials..."
        gcloud container clusters get-credentials "${CLUSTER_NAME}" --region "${REGION}"

        echo "Ensuring namespace with Helm adoption labels/annotations..."
        kubectl apply -f - <<'NS'
apiVersion: v1
kind: Namespace
metadata:
  name: vikunja
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: vikunja
    meta.helm.sh/release-namespace: vikunja
NS

        echo "Creating/updating secrets..."
        # Requires Secret Manager access on this SA for 'vikunja-db-password'
        DB_PASSWORD="$(gcloud secrets versions access latest --secret='vikunja-db-password')"
        # Simple random app secret
        APP_SECRET="$(head -c 32 /dev/urandom | od -An -tx1 | tr -d ' \n')"

        kubectl -n vikunja create secret generic vikunja-db-secret \
          --from-literal=POSTGRES_PASSWORD="${DB_PASSWORD}" \
          --dry-run=client -o yaml | kubectl apply -f -

        kubectl -n vikunja create secret generic vikunja-app-secret \
          --from-literal=JWT_SECRET="${APP_SECRET}" \
          --dry-run=client -o yaml | kubectl apply -f -

        echo "Helm version:"
        helm version

        echo "Installing/upgrading Helm release..."
        # Assumes the chart lives at ./helm/vikunja in your repo
        helm upgrade --install vikunja ./helm/vikunja \
          --namespace vikunja \
          --wait --timeout 10m
