options:
  logging: CLOUD_LOGGING_ONLY

steps:
# 0) Get cluster creds and persist kubeconfig for later steps
- id: get-credentials
  name: gcr.io/cloud-builders/gcloud
  entrypoint: bash
  args:
    - -ceu
    - |
      gcloud container clusters get-credentials vikunja-autopilot \
        --region europe-west4 \
        --project vikunja-case
      # keep kubeconfig between steps
      mkdir -p /workspace/.kube
      cp -f /builder/home/.kube/config /workspace/.kube/config

# 1) Prepare namespace and make it Helm-adoptable (avoids the ownership error)
- id: prepare-namespace
  name: gcr.io/cloud-builders/gcloud
  env:
    - KUBECONFIG=/workspace/.kube/config
  entrypoint: bash
  args:
    - -ceu
    - |
      kubectl get ns vikunja >/dev/null 2>&1 || kubectl create ns vikunja
      kubectl label ns vikunja app.kubernetes.io/managed-by=Helm --overwrite
      kubectl annotate ns vikunja meta.helm.sh/release-name=vikunja meta.helm.sh/release-namespace=vikunja --overwrite

# 2) Create/Update DB secret from Secret Manager
- id: create-secrets
  name: gcr.io/cloud-builders/gcloud
  env:
    - KUBECONFIG=/workspace/.kube/config
  entrypoint: bash
  args:
    - -ceu
    - |
      kubectl -n vikunja create secret generic vikunja-db-secret \
        --from-literal=postgresql-password="$(gcloud secrets versions access latest --secret=vikunja-db-password)" \
        --dry-run=client -o yaml | kubectl apply -f -

# 3) Download Helm directly and deploy (no registry pulls, no substitutions)
- id: helm-deploy
  name: gcr.io/cloud-builders/gcloud
  env:
    - KUBECONFIG=/workspace/.kube/config
  entrypoint: bash
  args:
    - -ceu
    - |
      set -euo pipefail
      curl -fsSL "https://get.helm.sh/helm-v3.14.4-linux-amd64.tar.gz" -o /workspace/helm.tgz
      tar -xzf /workspace/helm.tgz -C /workspace
      mv /workspace/linux-amd64/helm /workspace/helm && chmod +x /workspace/helm
      /workspace/helm version

      # Ensure your chart exists at ./helm/vikunja (must contain Chart.yaml)
      if [ -d "./helm/vikunja" ]; then
        /workspace/helm upgrade --install vikunja ./helm/vikunja \
          --namespace vikunja --create-namespace \
          --wait --timeout 15m
      else
        echo "ERROR: Chart not found at ./helm/vikunja"
        exit 1
      fi
