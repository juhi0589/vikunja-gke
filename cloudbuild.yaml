timeout: "3600s"
options:
  logging: CLOUD_LOGGING_ONLY

steps:
# 0) Prepare env + ensure the tfstate bucket exists
- id: prepare env & bucket
  name: gcr.io/cloud-builders/gcloud
  entrypoint: bash
  args:
    - -ceu
    - |
      set -euo pipefail

      PROJECT_ID="$(gcloud config get-value project)"
      REGION="europe-west4"
      CLUSTER_NAME="vikunja-autopilot"

      # your desired state bucket (adjust if you want a different name)
      TFSTATE_BUCKET="${PROJECT_ID}-tfstate"
      TFSTATE_PREFIX="gke"

      cat > /workspace/env.sh <<EOF
export PROJECT_ID=${PROJECT_ID}
export REGION=${REGION}
export CLUSTER_NAME=${CLUSTER_NAME}
export TFSTATE_BUCKET=${TFSTATE_BUCKET}
export TFSTATE_PREFIX=${TFSTATE_PREFIX}
EOF

      echo "Ensuring state bucket: gs://${TFSTATE_BUCKET}"
      if ! gcloud storage buckets describe "gs://${TFSTATE_BUCKET}" --format="value(name)" >/dev/null 2>&1; then
        gcloud storage buckets create "gs://${TFSTATE_BUCKET}" --project="${PROJECT_ID}" --location="${REGION}"
      else
        echo "Bucket already exists; not creating."
      fi

# 1) Terraform init/apply (note: hashicorp/terraform image has /bin/sh, not bash)
- id: terraform init+apply
  name: hashicorp/terraform:1.9.6
  entrypoint: sh
  dir: infra/terraform
  args:
    - -c
    - |
      . /workspace/env.sh

      terraform init -input=false \
        -backend-config="bucket=${TFSTATE_BUCKET}" \
        -backend-config="prefix=${TFSTATE_PREFIX}"

      terraform apply -auto-approve -input=false

# 2) Get creds and deploy Helm chart (do NOT pre-create the namespace)
- id: kubectl + helm deploy
  name: gcr.io/cloud-builders/gcloud
  entrypoint: bash
  args:
    - -ceu
    - |
      set -euo pipefail
      . /workspace/env.sh

      gcloud container clusters get-credentials "${CLUSTER_NAME}" --region "${REGION}"

      # If someone already created the namespace, give Helm ownership to avoid the error you hit
      if kubectl get ns vikunja >/dev/null 2>&1; then
        kubectl label ns vikunja app.kubernetes.io/managed-by=Helm --overwrite
        kubectl annotate ns vikunja meta.helm.sh/release-name=vikunja meta.helm.sh/release-namespace=vikunja --overwrite
      fi

      # Add chart repo and deploy
      helm repo add vikunja https://vikunja.github.io/vikunja
      helm repo update
      helm upgrade --install vikunja vikunja/vikunja \
        --namespace vikunja --create-namespace
