steps:
# -------------------------------
# 0) Terraform: create/update infra & write outputs we need for deploy
# -------------------------------
- name: hashicorp/terraform:1.9.6
  id: terraform apply + outputs
  entrypoint: /bin/sh
  args:
    - -c
    - |
      set -euo pipefail
      terraform init -input=false
      terraform apply -auto-approve -input=false

      # Export a small env file for the next step
      cat > /workspace/env.out <<'EOF'
      PROJECT_ID=${PROJECT_ID}
      REGION=europe-west4
      CLUSTER_NAME=vikunja-autopilot
      INSTANCE_CONN_NAME=$(terraform output -raw instance_connection_name || true)
      EOF
      echo "Wrote /workspace/env.out:"
      cat /workspace/env.out

# -------------------------------
# 1) Kubectl + Helm: adopt namespace, create secrets idempotently, install chart
# -------------------------------
- name: gcr.io/cloud-builders/gcloud
  id: kubectl + helm deploy
  entrypoint: /bin/bash
  args:
    - -euxo
    - pipefail
    - -c
    - |
      # Load values exported by step #0
      source /workspace/env.out

      echo "Using cluster: ${CLUSTER_NAME} in ${REGION}, project ${PROJECT_ID}"
      gcloud container clusters get-credentials "${CLUSTER_NAME}" --region "${REGION}" --project "${PROJECT_ID}"

      # Create namespace if missing
      kubectl get ns vikunja >/dev/null 2>&1 || kubectl create ns vikunja

      # Make the namespace Helm-managed (this fixes the error you saw)
      kubectl label ns vikunja app.kubernetes.io/managed-by=Helm --overwrite
      kubectl annotate ns vikunja meta.helm.sh/release-name=vikunja --overwrite
      kubectl annotate ns vikunja meta.helm.sh/release-namespace=vikunja --overwrite

      # Create/update secrets idempotently
      DB_PASS="$(gcloud secrets versions access latest --secret=vikunja-db-password)"
      kubectl -n vikunja create secret generic vikunja-db-secret \
        --from-literal=POSTGRES_PASSWORD="${DB_PASS}" \
        --dry-run=client -o yaml | kubectl apply -f -

      # (Optional dummy app secret to keep parity with your earlier logs)
      kubectl -n vikunja create secret generic vikunja-app-secret \
        --from-literal=DUMMY="ok" \
        --dry-run=client -o yaml | kubectl apply -f -

      # Helm install/upgrade
      helm repo add vikunja https://vikunja.github.io/helm-charts || true
      helm repo update
      helm upgrade --install vikunja vikunja/vikunja \
        --namespace vikunja \
        --wait --timeout 20m

      # Show what came up
      kubectl -n vikunja get pods
      kubectl -n vikunja get svc

# (Optional) print some context after build
- name: gcr.io/cloud-builders/gcloud
  id: show cluster & namespace
  entrypoint: /bin/bash
  args:
    - -c
    - |
      source /workspace/env.out
      gcloud container cluster
